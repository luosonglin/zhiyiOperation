# LOG4J配置
log4j.rootCategory=INFO, stdout,

# 控制台输出
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss,SSS} %5p %c{1}:%L - %m%n

# root日志输出
#log4j.appender.file=org.apache.log4j.DailyRollingFileAppender
#log4j.appender.file.file=logs/zhiyi_apps_root_file.log
#log4j.appender.file.DatePattern='.'yyyy-MM-dd
#log4j.appender.file.layout=org.apache.log4j.PatternLayout
#log4j.appender.file.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss,SSS} %5p %c{1}:%L - %m%n


# 分类输出
# 当我们日志量较多的时候，查找问题会非常困难，常用的手段就是对日志进行分类
# cn.luosonglin.test包下的日志配置
#log4j.category.cn.luosonglin.test=INFO, stdout, DEBUG, luofile
# cn.luosonglin.test下的日志输出
#log4j.appender.luofile=org.apache.log4j.DailyRollingFileAppender
#log4j.appender.luofile.file=logs/zhiyi_apps_luofile.log
#log4j.appender.luofile.DatePattern='.'yyyy-MM-dd
#log4j.appender.luofile.layout=org.apache.log4j.PatternLayout
#log4j.appender.luofile.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss,SSS} %5p %c{1}:%L ---- %m%n


# 可以对不同级别进行分类，比如对ERROR级别输出到特定的日志文件中，具体配置可以如下
#log4j.logger.error=errorfile
# error日志输出
#log4j.appender.errorfile=org.apache.log4j.DailyRollingFileAppender
#log4j.appender.errorfile.file=logs/error.log
#log4j.appender.errorfile.DatePattern='.'yyyy-MM-dd
#log4j.appender.errorfile.Threshold = ERROR
#log4j.appender.errorfile.layout=org.apache.log4j.PatternLayout
#log4j.appender.errorfile.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss,SSS} %5p %c{1}:%L - %m%n


#部署正式服的log配置
#log4j.rootCategory=DEBUG , stdout
#log4j.rootLogger=INFO , stdout
#log4j.appender.stdout=org.apache.log4j.ConsoleAppender
#log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
#log4j.appender.stdout.layout.ConversionPattern=%5p [%t] (%F:%L) - %m%n
#log4j.category.org.springframework.beans.factory=debug
#
#log4j.logger.java.sql.Connection = DEBUG
#log4j.logger.java.sql.Statement = DEBUG
#log4j.logger.java.sql.PreparedStatement = DEBUG
#log4j.logger.java.sql.ResultSet = DEBUG
#log4j.logger.com.healife=DEBUG,stdout




